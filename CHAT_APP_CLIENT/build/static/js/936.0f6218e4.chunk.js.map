{"version":3,"file":"static/js/936.0f6218e4.chunk.js","mappings":"6JACA,MAOA,EAPyBA,IACvB,MAAMC,EAAMC,EAAAA,OAAa,CAAC,GAI1B,OAHAA,EAAAA,WAAgB,KACdD,EAAIE,QAAUH,CAAK,IAEdC,EAAIE,OAAO,E,yCCJb,SAASC,EAA6BC,GAC3C,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EAC1C,EAC6BE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,QAAS,c,0BCHlF,MAAMC,EAAY,CAAC,eAAgB,YAAa,WAAY,YAAa,MAAO,YAAa,QAAS,YA6BhGC,EAA6BP,EAAAA,YAAiB,SAAuBQ,EAAOT,GAChF,MAAM,UACFU,EAAS,SACTC,EACAC,IAAKC,EAAU,GAAE,UACjBC,EAAY,CAAC,EAAC,MACdC,EAAQ,CAAC,EAAC,SACVC,GAAW,GACTP,EACJQ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAOF,IACzC,aACJY,EAAY,IACZP,EAAG,aACHQ,EAAY,UACZC,GC5CW,SAAkBC,GAC/B,MACEH,aAAcI,EACdF,UAAWG,GAAgB,EAC3BZ,IAAKC,EAAU,GAAE,SACjBG,GAAW,GACTM,EACEG,EAAYC,EAAiB,CACjCP,aAAcI,EACdX,IAAKC,IAEP,IAAIQ,EAAYG,GACM,IAAlBA,GAAgD,IAArBD,GAA2BP,IACxDK,GAAY,GAEd,MAAM,aACJF,EAAY,IACZP,EAAMC,GACJQ,EAAYI,EAAYH,EAE5B,MAAO,CACLH,eACAE,YACAT,MACAQ,aALmBD,GAAgBQ,OAAOR,GAAgBP,EAAM,GAAHgB,OAAMhB,EAAG,KAAMO,EAOhF,CDmBMU,EAASC,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CAC/BG,IAAKC,KAEDkB,GAAaD,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCU,eACAE,YACAT,MACAI,aAEIgB,EA5CkBD,KACxB,MAAM,UACJV,GACEU,EACEhB,EAAQ,CACZkB,KAAM,CAAC,QACPC,MAAO,CAAC,QAASb,GAAa,cAEhC,OAAOc,EAAAA,EAAAA,GAAepB,EAAOZ,OAA8BiC,EAAU,EAoCrDC,CAAkBN,GAC5BO,EAAO5B,GAAaK,EAAMkB,MAAQ,OAClCM,GAAYC,EAAAA,EAAAA,GAAa,CAC7BC,YAAaH,EACbI,kBAAmB5B,EAAUmB,KAC7BU,uBAAwB1B,EACxB2B,gBAAiB,CACf5C,OAEF+B,aACAc,UAAWb,EAAQC,OAEfa,EAAQ/B,EAAMmB,OAAS,OACvBa,GAAaP,EAAAA,EAAAA,GAAa,CAC9BC,YAAaK,EACbJ,kBAAmB5B,EAAUoB,MAC7BH,aACAc,UAAWb,EAAQE,QAErB,OAAoBc,EAAAA,EAAAA,MAAMV,GAAMR,EAAAA,EAAAA,GAAS,CAAC,EAAGS,EAAW,CACtD5B,SAAU,CAACA,GAAuBsC,EAAAA,EAAAA,KAAKH,GAAOhB,EAAAA,EAAAA,GAAS,CAAC,EAAGiB,EAAY,CACrEpC,SAAUS,QAGhB,IAoDA,I,qCElIA,MAGA,EAHoC8B,IAC1BA,KAASC,EAAAA,EAAAA,GAAgBD,G,cCA5B,SAASE,EAAqBhD,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EAC1C,CACA,MAGA,GAHqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,QAAS,MAAO,WAAY,uBAAwB,0BAA2B,sBAAuB,yBAA0B,YAAa,aAAc,YAAa,eAAgB,iBAAkB,eAAgB,eAAgB,qBAAsB,kBAEjU,8BAA+B,iCAAkC,+BAAgC,kCAAmC,iCAAkC,oCAAqC,kCAAmC,uCCLxOC,EAAY,CAAC,eAAgB,YAAa,YAAa,aAAc,kBAAmB,UAAW,QAAS,YAAa,MAAO,eAAgB,QAAS,YAAa,WAAY,WA8BlL8C,GAAYC,EAAAA,EAAAA,IAAO,OAAQ,CAC/BC,KAAM,WACNnD,KAAM,OACNoD,kBAAmBA,CAAC/C,EAAOgD,IAAWA,EAAOxB,MAH7BqB,CAIf,CACDI,SAAU,WACVC,QAAS,cAETC,cAAe,SACfC,WAAY,IAERC,GAAaR,EAAAA,EAAAA,IAAO,OAAQ,CAChCC,KAAM,WACNnD,KAAM,QACNoD,kBAAmBA,CAAC/C,EAAOgD,KACzB,MAAM,WACJ1B,GACEtB,EACJ,MAAO,CAACgD,EAAOvB,MAAOuB,EAAO1B,EAAWgC,SAAUN,EAAO,eAAD7B,QAAgBoC,EAAAA,EAAAA,GAAWjC,EAAWkC,aAAaC,WAAStC,QAAGoC,EAAAA,EAAAA,GAAWjC,EAAWkC,aAAaE,aAAWvC,QAAGoC,EAAAA,EAAAA,GAAWjC,EAAWqC,WAAkC,YAArBrC,EAAWsC,OAAuBZ,EAAO,QAAD7B,QAASoC,EAAAA,EAAAA,GAAWjC,EAAWsC,SAAWtC,EAAWV,WAAaoC,EAAOpC,UAAU,GAPvTiC,EAShBgB,IAAA,IAAC,MACFC,EAAK,WACLxC,GACDuC,EAAA,OAAKxC,EAAAA,EAAAA,GAAS,CACb6B,QAAS,OACTa,cAAe,MACfC,SAAU,OACVC,eAAgB,SAChBC,aAAc,SACdC,WAAY,SACZlB,SAAU,WACVmB,UAAW,aACXC,WAAYP,EAAMQ,WAAWD,WAC7BE,WAAYT,EAAMQ,WAAWE,iBAC7BC,SAAUX,EAAMQ,WAAWI,QAAQ,IACnCC,SAAUC,GACVC,WAAY,EACZC,QAAS,QACTC,OAAQH,GACRI,aAxDsB,GAyDtBC,OAAQ,EAERC,WAAYpB,EAAMqB,YAAYC,OAAO,YAAa,CAChDC,OAAQvB,EAAMqB,YAAYE,OAAOC,UACjCC,SAAUzB,EAAMqB,YAAYI,SAASC,kBAEjB,YAArBlE,EAAWsC,OAAuB,CACnC6B,iBAAkB3B,EAAM4B,MAAQ5B,GAAO6B,QAAQrE,EAAWsC,OAAOgC,KACjEhC,OAAQE,EAAM4B,MAAQ5B,GAAO6B,QAAQrE,EAAWsC,OAAOiC,cAC/B,QAAvBvE,EAAWgC,SAAqB,CACjC0B,aAlEiB,EAmEjBD,OAAQe,EACRnB,SAAUmB,EACVhB,QAAS,GAC6B,QAArCxD,EAAWkC,aAAaC,UAA6D,UAAvCnC,EAAWkC,aAAaE,YAAiD,gBAAvBpC,EAAWqC,SAA6B,CACzIoC,IAAK,EACLC,MAAO,EACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,kCAEyB,WAArC3E,EAAWkC,aAAaC,UAAgE,UAAvCnC,EAAWkC,aAAaE,YAAiD,gBAAvBpC,EAAWqC,SAA6B,CAC5IyC,OAAQ,EACRJ,MAAO,EACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,iCAEyB,QAArC3E,EAAWkC,aAAaC,UAA6D,SAAvCnC,EAAWkC,aAAaE,YAAgD,gBAAvBpC,EAAWqC,SAA6B,CACxIoC,IAAK,EACLM,KAAM,EACNJ,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,mCAEyB,WAArC3E,EAAWkC,aAAaC,UAAgE,SAAvCnC,EAAWkC,aAAaE,YAAgD,gBAAvBpC,EAAWqC,SAA6B,CAC3IyC,OAAQ,EACRC,KAAM,EACNJ,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,kCAEyB,QAArC3E,EAAWkC,aAAaC,UAA6D,UAAvCnC,EAAWkC,aAAaE,YAAiD,aAAvBpC,EAAWqC,SAA0B,CACtIoC,IAAK,MACLC,MAAO,MACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,kCAEyB,WAArC3E,EAAWkC,aAAaC,UAAgE,UAAvCnC,EAAWkC,aAAaE,YAAiD,aAAvBpC,EAAWqC,SAA0B,CACzIyC,OAAQ,MACRJ,MAAO,MACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,iCAEyB,QAArC3E,EAAWkC,aAAaC,UAA6D,SAAvCnC,EAAWkC,aAAaE,YAAgD,aAAvBpC,EAAWqC,SAA0B,CACrIoC,IAAK,MACLM,KAAM,MACNJ,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,mCAEyB,WAArC3E,EAAWkC,aAAaC,UAAgE,SAAvCnC,EAAWkC,aAAaE,YAAgD,aAAvBpC,EAAWqC,SAA0B,CACxIyC,OAAQ,MACRC,KAAM,MACNJ,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD/E,OAAMgF,EAAavF,YAAc,CAC/BqF,UAAW,kCAEZ3E,EAAWV,WAAa,CACzBsE,WAAYpB,EAAMqB,YAAYC,OAAO,YAAa,CAChDC,OAAQvB,EAAMqB,YAAYE,OAAOC,UACjCC,SAAUzB,EAAMqB,YAAYI,SAASe,iBAEvC,IAoNF,EAnN2B9G,EAAAA,YAAiB,SAAe+G,EAAShH,GAClE,IAAIiH,EAAMC,EAAaC,EAAOC,EAAcC,EAAiBC,EAC7D,MAAM7G,GAAQ8G,EAAAA,EAAAA,GAAc,CAC1B9G,MAAOuG,EACPzD,KAAM,cAGJU,aAAcuD,EAAmB,CAC/BtD,SAAU,MACVC,WAAY,SACb,UACDtB,EAAS,UACTnC,EAAY,OAAM,WAClB+G,EAAa,CAAC,EAAC,gBACfC,EAAkB,CAAC,EACnBtD,QAASuD,EAAc,cACvBtD,MAAOuD,EAAY,UACnBvG,UAAWG,GAAgB,EAAK,IAChCZ,EACAO,aAAcI,EAAgB,MAC9BR,EAAK,UACLD,EAAS,SACTE,GAAW,EACX+C,QAAS8D,EAAc,YACrBpH,EACJQ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAOF,GACzCkB,EAAYC,EAAiB,CACjCuC,aAAcuD,EACdnD,MAAOuD,EACPxD,QAASuD,EACT5D,QAAS8D,IAEX,IAAIxG,EAAYG,GACM,IAAlBA,IAAiD,IAArBD,IAA2BP,GAAgC,MAApBO,GAA4C,QAAhBsG,KACjGxG,GAAY,GAEd,MAAM,MACJgD,EAAQuD,EAAS,QACjBxD,EAAUuD,EAAW,aACrB1D,EAAeuD,EAAgB,QAC/BzD,EAAU8D,GACRxG,EAAYI,EAAYhB,EAQtBuB,EA5LkBD,KACxB,MAAM,MACJsC,EAAK,aACLJ,EAAY,UACZ5C,EAAS,QACT+C,EAAO,QACPL,EAAO,QACP/B,EAAU,CAAC,GACTD,EACEhB,EAAQ,CACZkB,KAAM,CAAC,QACPC,MAAO,CAAC,QAAS6B,EAAS1C,GAAa,YAAa,eAAFO,QAAiBoC,EAAAA,EAAAA,GAAWC,EAAaC,WAAStC,QAAGoC,EAAAA,EAAAA,GAAWC,EAAaE,aAAW,eAAAvC,QAAmBoC,EAAAA,EAAAA,GAAWC,EAAaC,WAAStC,QAAGoC,EAAAA,EAAAA,GAAWC,EAAaE,aAAWvC,QAAGoC,EAAAA,EAAAA,GAAWI,IAAQ,UAAAxC,QAAcoC,EAAAA,EAAAA,GAAWI,IAAsB,YAAVC,GAAuB,QAAJzC,QAAYoC,EAAAA,EAAAA,GAAWK,MAE3U,OAAOlC,EAAAA,EAAAA,GAAepB,EAAOqC,EAAsBpB,EAAQ,EA+K3CK,EAPGP,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCwD,eACA5C,YACAgD,QACAD,UACAL,aAGF,IAAI3C,EACY,QAAZ2C,IACF3C,EAAeG,GAAoBI,OAAOJ,GAAoBX,EAAM,GAAHgB,OAAMhB,EAAG,KAAMW,GAIlF,MAAMuG,EAAmH,OAAvGb,EAA8D,OAAtDC,EAAuB,MAATnG,OAAgB,EAASA,EAAMkB,MAAgBiF,EAAcO,EAAWnF,MAAgB2E,EAAO5D,EACjI0E,EAAyH,OAA5GZ,EAAiE,OAAxDC,EAAwB,MAATrG,OAAgB,EAASA,EAAMmB,OAAiBkF,EAAeK,EAAW3E,OAAiBqE,EAAQrD,EACxIkE,EAAmF,OAAlEX,EAA+B,MAAbvG,OAAoB,EAASA,EAAUmB,MAAgBoF,EAAkBK,EAAgBzF,KAC5HgG,EAAsF,OAApEX,EAAgC,MAAbxG,OAAoB,EAASA,EAAUoB,OAAiBoF,EAAmBI,EAAgBxF,MACtI,OAAoBe,EAAAA,EAAAA,KAAKzC,GAAesB,EAAAA,EAAAA,GAAS,CAC/CT,UAAWG,EACXL,aAAcC,EACdJ,SAAUA,EACVJ,IAAKA,GACJK,EAAO,CACRF,MAAO,CACLkB,KAAM6F,EACN5F,MAAO6F,GAETlF,WAAWqF,EAAAA,EAAAA,GAAsB,MAAjBF,OAAwB,EAASA,EAAcnF,UAAWb,EAAQC,KAAMY,GACxF/B,UAAW,CACTmB,MAAMH,EAAAA,EAAAA,GAAS,CAAC,EAAGkG,EAAeG,EAA4BL,IAAa,CACzEM,GAAI1H,EACJqB,YAAYD,EAAAA,EAAAA,GAAS,CAAC,EAAoB,MAAjBkG,OAAwB,EAASA,EAAcjG,WAAY,CAClFkC,eACAI,QACAD,UACAL,cAGJ7B,OAAOJ,EAAAA,EAAAA,GAAS,CAAC,EAAGmG,EAAgB,CAClCpF,WAAWqF,EAAAA,EAAAA,GAAKlG,EAAQE,MAAyB,MAAlB+F,OAAyB,EAASA,EAAepF,YAC/EsF,EAA4BJ,IAAc,CAC3ChG,YAAYD,EAAAA,EAAAA,GAAS,CAAC,EAAqB,MAAlBmG,OAAyB,EAASA,EAAelG,WAAY,CACpFkC,eACAI,QACAD,UACAL,eAIN/D,IAAKA,IAET,G,wEC/OMqI,EAAgB,IAAIC,IAE1BD,EAAcE,IAAI,QAAQ,SAAClE,GAAD,OACxBpE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CACEuI,GAAG,MACHC,GAAG,MACHC,EAAE,KACFC,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OAEd9I,EAAAA,cAAAA,OAAAA,CACE+I,GAAG,QACHC,GAAG,QACHC,GAAG,MACHC,GAAG,MACHR,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OArBQ,IA0B1BV,EAAcE,IAAI,WAAW,SAAClE,GAAD,OAC3BpE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQuI,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKU,QAAQ,QACzCnJ,EAAAA,cAAAA,SAAAA,CACEuI,GAAG,MACHC,GAAG,MACHC,EAAE,KACFC,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OAEd9I,EAAAA,cAAAA,OAAAA,CACE+I,GAAG,QACHC,GAAG,QACHC,GAAG,MACHC,GAAG,MACHR,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OAtBW,IA2B7BV,EAAcE,IAAI,QAAQ,kBACxBtI,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMoJ,EAAE,gOAFc,IAM1BhB,EAAcE,IAAI,SAAS,SAAClE,GAAD,OACzBpE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CACEuI,GAAG,MACHC,GAAG,MACHC,EAAE,KACFC,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OAEd9I,EAAAA,cAAAA,OAAAA,CACE+I,GAAG,QACHC,GAAG,QACHC,GAAG,MACHC,GAAG,MACHR,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OArBS,IA0B3BV,EAAcE,IAAI,QAAQ,SAAClE,GAAD,OACxBpE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CACEuI,GAAG,MACHC,GAAG,MACHC,EAAE,KACFC,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,MAEd9I,EAAAA,cAAAA,OAAAA,CACE+I,GAAG,QACHC,GAAG,QACHC,GAAG,MACHC,GAAG,MACHR,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,MArBQ,IA0B1BV,EAAcE,IAAI,WAAW,SAAClE,GAAD,OAC3BpE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CACEuI,GAAG,MACHC,GAAG,MACHC,EAAE,KACFC,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OAEd9I,EAAAA,cAAAA,OAAAA,CACE+I,GAAG,QACHC,GAAG,QACHC,GAAG,MACHC,GAAG,MACHR,KAAK,OACLC,OAAQvE,EACRwE,cAAc,QACdC,eAAe,QACfC,YAAY,OArBW,IA0B7B,IAAMO,EAA6B,SAACC,EAAoBlF,GAArB,OACjCmF,EAAAA,EAAAA,GAAoBD,EAAQlF,EAAOgE,EADF,EAG7BoB,GAAkBC,EAAAA,EAAAA,aAAqC,SAACjJ,EAAOT,GAAR,OAC3DC,EAAAA,cAAC0J,EAAAA,EAAD,eAAU3J,IAAKA,GAASS,EAAAA,CAAO6I,WAAYA,IADgB,IAI7DG,EAAgBG,YAAc,kB","sources":["../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/phosphor-react/src/icons/MagnifyingGlass.tsx"],"sourcesContent":["import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n      component,\n      children,\n      max: maxProp = 99,\n      slotProps = {},\n      slots = {},\n      showZero = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || slots.root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = slots.badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import { isHostComponent } from '@mui/base';\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\nexport default shouldSpreadAdditionalProps;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component = 'span',\n      components = {},\n      componentsProps = {},\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    slots: {\n      root: RootSlot,\n      badge: BadgeSlot\n    },\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\n    slotProps: {\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\n        as: component,\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, badgeSlotProps, {\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"116\" cy=\"116\" r=\"84\" opacity=\"0.2\" />\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,116a60,60,0,1,1-60-60A60,60,0,0,1,176,116Zm53.6,113.7A8,8,0,0,1,224,232a8.3,8.3,0,0,1-5.7-2.3l-43.2-43.3a92.2,92.2,0,1,1,11.3-11.3l43.2,43.2A8,8,0,0,1,229.6,229.7ZM116,192a76,76,0,1,0-76-76A76.1,76.1,0,0,0,116,192Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst MagnifyingGlass = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nMagnifyingGlass.displayName = \"MagnifyingGlass\";\n\nexport default MagnifyingGlass;\n"],"names":["value","ref","React","current","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","props","component","children","max","maxProp","slotProps","slots","showZero","other","_objectWithoutPropertiesLoose","badgeContent","displayValue","invisible","parameters","badgeContentProp","invisibleProp","prevProps","usePreviousProps","Number","concat","useBadge","_extends","ownerState","classes","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Badge","badgeProps","_jsxs","_jsx","Slot","isHostComponent","getBadgeUtilityClass","BadgeRoot","styled","name","overridesResolver","styles","position","display","verticalAlign","flexShrink","BadgeBadge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","_ref3","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","inProps","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","anchorOriginProp","components","componentsProps","overlapProp","colorProp","variantProp","RootSlot","BadgeSlot","rootSlotProps","badgeSlotProps","clsx","shouldSpreadAdditionalProps","as","pathsByWeight","Map","set","cx","cy","r","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","d","renderPath","weight","renderPathForWeight","MagnifyingGlass","forwardRef","IconBase","displayName"],"sourceRoot":""}