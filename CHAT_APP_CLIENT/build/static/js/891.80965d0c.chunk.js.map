{"version":3,"file":"static/js/891.80965d0c.chunk.js","mappings":"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","sources":["components/Chat/Header.js","components/Chat/Footer.js","pages/dashboard/Conversation.js","sections/Dashboard/Conversation.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  Divider,\r\n  Fade,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  styled,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\r\n// import { faker } from \"@faker-js/faker\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { ToggleSidebar } from \"../../redux/slices/app\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StartAudioCall } from \"../../redux/slices/audioCall\";\r\nimport { StartVideoCall } from \"../../redux/slices/videoCall\";\r\n// import { useSearchParams } from \"react-router-dom\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Conversation_Menu = [\r\n  {\r\n    title: \"Contact info\",\r\n  },\r\n  {\r\n    title: \"Mute notifications\",\r\n  },\r\n  {\r\n    title: \"Clear messages\",\r\n  },\r\n  {\r\n    title: \"Delete chat\",\r\n  },\r\n];\r\n\r\nconst ChatHeader = () => {\r\n  const dispatch = useDispatch();\r\n  // const [searchParams, setSearchParams] = useSearchParams();\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const [conversationMenuAnchorEl, setConversationMenuAnchorEl] =\r\n    React.useState(null);\r\n  const openConversationMenu = Boolean(conversationMenuAnchorEl);\r\n  const handleClickConversationMenu = (event) => {\r\n    setConversationMenuAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseConversationMenu = () => {\r\n    setConversationMenuAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        p={2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack\r\n          alignItems={\"center\"}\r\n          direction={\"row\"}\r\n          sx={{ width: \"100%\", height: \"100%\" }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack\r\n            onClick={() => {\r\n              dispatch(ToggleSidebar());\r\n            }}\r\n            spacing={2}\r\n            direction=\"row\"\r\n          >\r\n            <Box>\r\n              <StyledBadge\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar\r\n                  alt={current_conversation?.name}\r\n                  src={current_conversation?.img}\r\n                />\r\n              </StyledBadge>\r\n            </Box>\r\n            <Stack spacing={0.2}>\r\n              <Typography variant=\"subtitle2\">\r\n                {current_conversation?.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Online</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction={\"row\"}\r\n            alignItems=\"center\"\r\n            spacing={isMobile ? 1 : 3}\r\n          >\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(StartVideoCall(current_conversation.user_id));\r\n              }}\r\n            >\r\n              <VideoCamera />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(StartAudioCall(current_conversation.user_id));\r\n              }}\r\n            >\r\n              <Phone />\r\n            </IconButton>\r\n            {!isMobile && (\r\n              <IconButton>\r\n                <MagnifyingGlass />\r\n              </IconButton>\r\n            )}\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <IconButton\r\n              id=\"conversation-positioned-button\"\r\n              aria-controls={\r\n                openConversationMenu\r\n                  ? \"conversation-positioned-menu\"\r\n                  : undefined\r\n              }\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={openConversationMenu ? \"true\" : undefined}\r\n              onClick={handleClickConversationMenu}\r\n            >\r\n              <CaretDown />\r\n            </IconButton>\r\n            <Menu\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"fade-button\",\r\n              }}\r\n              TransitionComponent={Fade}\r\n              id=\"conversation-positioned-menu\"\r\n              aria-labelledby=\"conversation-positioned-button\"\r\n              anchorEl={conversationMenuAnchorEl}\r\n              open={openConversationMenu}\r\n              onClose={handleCloseConversationMenu}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n            >\r\n              <Box p={1}>\r\n                <Stack spacing={1}>\r\n                  {Conversation_Menu.map((el) => (\r\n                    <MenuItem onClick={handleCloseConversationMenu}>\r\n                      <Stack\r\n                        sx={{ minWidth: 100 }}\r\n                        direction=\"row\"\r\n                        alignItems={\"center\"}\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <span>{el.title}</span>\r\n                      </Stack>{\" \"}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Stack>\r\n              </Box>\r\n            </Menu>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n  Camera,\r\n  File,\r\n  Image,\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Smiley,\r\n  Sticker,\r\n  User,\r\n} from \"phosphor-react\";\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { socket } from \"../../socket\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px !important\",\r\n    paddingBottom: \"12px !important\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <Image size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n  },\r\n  {\r\n    color: \"#1b8cfe\",\r\n    icon: <Sticker size={24} />,\r\n    y: 172,\r\n    title: \"Stickers\",\r\n  },\r\n  {\r\n    color: \"#0172e4\",\r\n    icon: <Camera size={24} />,\r\n    y: 242,\r\n    title: \"Image\",\r\n  },\r\n  {\r\n    color: \"#0159b2\",\r\n    icon: <File size={24} />,\r\n    y: 312,\r\n    title: \"Document\",\r\n  },\r\n  {\r\n    color: \"#013f7f\",\r\n    icon: <User size={24} />,\r\n    y: 382,\r\n    title: \"Contact\",\r\n  },\r\n];\r\n\r\nconst ChatInput = ({\r\n  openPicker,\r\n  setOpenPicker,\r\n  setValue,\r\n  value,\r\n  inputRef,\r\n  handleSendMessage, // Add this prop\r\n}) => {\r\n  const [openActions, setOpenActions] = React.useState(false);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSendMessage(); // Call handleSendMessage when Enter is pressed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledInput\r\n      inputRef={inputRef}\r\n      value={value}\r\n      onChange={(event) => {\r\n        setValue(event.target.value);\r\n      }}\r\n      onKeyPress={handleKeyPress} // Listen for key press events\r\n      fullWidth\r\n      placeholder=\"Write a message...\"\r\n      variant=\"filled\"\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        startAdornment: (\r\n          <Stack sx={{ width: \"max-content\" }}>\r\n            <Stack\r\n              sx={{\r\n                position: \"relative\",\r\n                display: openActions ? \"inline-block\" : \"none\",\r\n              }}\r\n            >\r\n              {Actions.map((el) => (\r\n                <Tooltip placement=\"right\" title={el.title}>\r\n                  <Fab\r\n                    onClick={() => {\r\n                      setOpenActions(!openActions);\r\n                    }}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: -el.y,\r\n                      backgroundColor: el.color,\r\n                    }}\r\n                    aria-label=\"add\"\r\n                  >\r\n                    {el.icon}\r\n                  </Fab>\r\n                </Tooltip>\r\n              ))}\r\n            </Stack>\r\n\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenActions(!openActions);\r\n                }}\r\n              >\r\n                <LinkSimple />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n        endAdornment: (\r\n          <Stack sx={{ position: \"relative\" }}>\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenPicker(!openPicker);\r\n                }}\r\n              >\r\n                <Smiley />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction linkify(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return text.replace(\r\n    urlRegex,\r\n    (url) => `<a href=\"${url}\" target=\"_blank\">${url}</a>`\r\n  );\r\n}\r\n\r\nfunction containsUrl(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return urlRegex.test(text);\r\n}\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const user_id = window.localStorage.getItem(\"user_id\");\r\n\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n\r\n  const { sideBar, room_id } = useSelector((state) => state.app);\r\n  const isSideBarOpen = sideBar && sideBar.open;\r\n\r\n  const [openPicker, setOpenPicker] = React.useState(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  function handleEmojiClick(emoji) {\r\n    const input = inputRef.current;\r\n\r\n    if (input) {\r\n      const selectionStart = input.selectionStart;\r\n      const selectionEnd = input.selectionEnd;\r\n\r\n      setValue(\r\n        value.substring(0, selectionStart) +\r\n          emoji +\r\n          value.substring(selectionEnd)\r\n      );\r\n\r\n      // Move the cursor to the end of the inserted emoji\r\n      input.selectionStart = input.selectionEnd = selectionStart + 1;\r\n    }\r\n  }\r\n\r\n  const handleSendMessage = () => {\r\n    if (value.trim() !== \"\") {\r\n      socket.emit(\"text_message\", {\r\n        message: linkify(value),\r\n        conversation_id: room_id,\r\n        from: user_id,\r\n        to: current_conversation.user_id,\r\n        type: containsUrl(value) ? \"Link\" : \"Text\",\r\n      });\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        backgroundColor: \"transparent !important\",\r\n      }}\r\n    >\r\n      <Box\r\n        p={isMobile ? 1 : 2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={isMobile ? 1 : 3}>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Box\r\n              style={{\r\n                zIndex: 10,\r\n                position: \"fixed\",\r\n                display: openPicker ? \"inline\" : \"none\",\r\n                bottom: 81,\r\n                right: isMobile ? 20 : isSideBarOpen ? 420 : 100,\r\n              }}\r\n            >\r\n              <Picker\r\n                theme={theme.palette.mode}\r\n                data={data}\r\n                onEmojiSelect={(emoji) => {\r\n                  handleEmojiClick(emoji.native);\r\n                }}\r\n              />\r\n            </Box>\r\n            {/* Chat Input */}\r\n            <ChatInput\r\n              inputRef={inputRef}\r\n              value={value}\r\n              setValue={setValue}\r\n              openPicker={openPicker}\r\n              setOpenPicker={setOpenPicker}\r\n              handleSendMessage={handleSendMessage} // Pass handleSendMessage to ChatInput\r\n            />\r\n          </Stack>\r\n          <Box\r\n            sx={{\r\n              height: 48,\r\n              width: 48,\r\n              backgroundColor: theme.palette.primary.main,\r\n              borderRadius: 1.5,\r\n            }}\r\n          >\r\n            <Stack\r\n              sx={{ height: \"100%\" }}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"center\"\r\n            >\r\n              <IconButton onClick={handleSendMessage}>\r\n                {\" \"}\r\n                {/* Use handleSendMessage directly */}\r\n                <PaperPlaneTilt color=\"#ffffff\" />\r\n              </IconButton>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Stack, Box } from \"@mui/material\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\n\r\nimport { ChatHeader, ChatFooter } from \"../../components/Chat\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n// import { Chat_History } from \"../../data\";\r\nimport {\r\n  DocMsg,\r\n  LinkMsg,\r\n  MediaMsg,\r\n  ReplyMsg,\r\n  TextMsg,\r\n  Timeline,\r\n} from \"../../sections/Dashboard/Conversation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FetchCurrentMessages,\r\n  SetCurrentConversation,\r\n} from \"../../redux/slices/conversation\";\r\nimport { socket } from \"../../socket\";\r\n\r\nconst Conversation = ({ isMobile, menu }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { conversations, current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n  const { room_id } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    const current = conversations.find((el) => el?.id === room_id);\r\n\r\n    socket.emit(\"get_messages\", { conversation_id: current?.id }, (data) => {\r\n      // data => list of messages\r\n      console.log(data, \"List of messages\");\r\n      dispatch(FetchCurrentMessages({ messages: data }));\r\n    });\r\n\r\n    dispatch(SetCurrentConversation(current));\r\n  }, [conversations, dispatch, room_id]);\r\n  return (\r\n    <Box p={isMobile ? 1 : 3}>\r\n      <Stack spacing={3}>\r\n        {current_messages &&\r\n          current_messages.map((el, idx) => {\r\n            switch (el.type) {\r\n              case \"divider\":\r\n                return (\r\n                  // Timeline\r\n                  <Timeline el={el} />\r\n                );\r\n\r\n              case \"msg\":\r\n                switch (el.subtype) {\r\n                  case \"img\":\r\n                    return (\r\n                      // Media Message\r\n                      <MediaMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  case \"doc\":\r\n                    return (\r\n                      // Doc Message\r\n                      <DocMsg el={el} menu={menu} />\r\n                    );\r\n                  case \"Link\":\r\n                    return (\r\n                      //  Link Message\r\n                      <LinkMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  case \"reply\":\r\n                    return (\r\n                      //  ReplyMessage\r\n                      <ReplyMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  default:\r\n                    return (\r\n                      // Text Message\r\n                      <TextMsg el={el} menu={menu} />\r\n                    );\r\n                }\r\n\r\n              default:\r\n                return <></>;\r\n            }\r\n          })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ChatComponent = () => {\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const messageListRef = useRef(null);\r\n\r\n  const { current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the message list when new messages are added\r\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n  }, [current_messages]);\r\n\r\n  return (\r\n    <Stack height=\"100%\" maxHeight=\"100vh\" width={isMobile ? \"100vw\" : \"auto\"}>\r\n      {/*  */}\r\n      <ChatHeader />\r\n      <Box\r\n        ref={messageListRef}\r\n        width={\"100%\"}\r\n        sx={{\r\n          position: \"relative\",\r\n          flexGrow: 1,\r\n          height: \"100%\",\r\n          overflowY: \"scroll\",\r\n\r\n          \"::-webkit-scrollbar\": {\r\n            width: \"1.5px\",\r\n          },\r\n\r\n          \"::-webkit-scrollbar-track \": {\r\n            background:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background.paper,\r\n          },\r\n\r\n          /* Handle */\r\n          \" ::-webkit-scrollbar-thumb \": {\r\n            background: \"#888\",\r\n          },\r\n\r\n          /* Handle on hover */\r\n          \"::-webkit-scrollbar-thumb:hover\": {\r\n            background: \"#555\",\r\n          },\r\n\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F0F4FA\"\r\n              : theme.palette.background,\r\n\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n          <Conversation menu={true} isMobile={isMobile} />\r\n        </SimpleBarStyle>\r\n      </Box>\r\n\r\n      {/*  */}\r\n      <ChatFooter />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n\r\nexport { Conversation };\r\n","import React from \"react\";\r\nimport {\r\n  Stack,\r\n  Box,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\r\nimport { Message_options } from \"../../data\";\r\n// import { Link } from \"react-router-dom\";\r\n// import truncateString from \"../../utils/truncate\";\r\n// import { LinkPreview } from \"@dhaiwat10/react-link-preview\";\r\n// import Embed from \"react-embed\";\r\n\r\nconst MessageOption = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <DotsThreeVertical\r\n        size={20}\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      />\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <Stack spacing={1} px={1}>\r\n          {Message_options.map((el) => (\r\n            <MenuItem onClick={handleClose}>{el.title}</MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          color={el.incoming ? theme.palette.text : \"#fff\"}\r\n        >\r\n          {el.message}\r\n        </Typography>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst MediaMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={1}>\r\n          <img\r\n            src={el.img}\r\n            alt={el.message}\r\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\r\n          />\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst DocMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"row\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Image size={48} />\r\n            <Typography variant=\"caption\">Abstract.png</Typography>\r\n            <IconButton>\r\n              <DownloadSimple />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst LinkMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"start\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Stack direction={\"column\"} spacing={2}>\r\n              {/* <Embed\r\n                width=\"300px\"\r\n                isDark\r\n                url={`https://youtu.be/xoWxBR34qLE`}\r\n              /> */}\r\n            </Stack>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            <div dangerouslySetInnerHTML={{ __html: el.message }}></div>\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst ReplyMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.paper, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: alpha(theme.palette.background.paper, 1),\r\n\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color={theme.palette.text}>\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.reply}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst Timeline = ({ el }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" alignItems={\"center\"} justifyContent=\"space-between\">\r\n      <Divider width=\"46%\" />\r\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\r\n        {el.text}\r\n      </Typography>\r\n      <Divider width=\"46%\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport { Timeline, MediaMsg, LinkMsg, DocMsg, TextMsg, ReplyMsg };\r\n"],"names":["StyledBadge","styled","Badge","_ref","theme","backgroundColor","color","boxShadow","concat","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Conversation_Menu","title","ChatHeader","dispatch","useDispatch","isMobile","useResponsive","useTheme","current_conversation","useSelector","state","conversation","direct_chat","conversationMenuAnchorEl","setConversationMenuAnchorEl","React","openConversationMenu","Boolean","handleCloseConversationMenu","_jsx","_Fragment","children","Box","p","sx","mode","_jsxs","Stack","alignItems","direction","justifyContent","onClick","ToggleSidebar","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","name","src","img","Typography","IconButton","StartVideoCall","user_id","VideoCamera","StartAudioCall","Phone","MagnifyingGlass","Divider","orientation","flexItem","id","undefined","event","currentTarget","CaretDown","Menu","MenuListProps","TransitionComponent","Fade","anchorEl","open","onClose","transformOrigin","map","el","MenuItem","minWidth","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","Image","size","y","Sticker","Camera","File","User","ChatInput","_ref2","openPicker","setOpenPicker","setValue","value","inputRef","handleSendMessage","openActions","setOpenActions","onChange","target","onKeyPress","key","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","display","Tooltip","placement","Fab","InputAdornment","LinkSimple","endAdornment","Smiley","containsUrl","text","test","Footer","window","localStorage","getItem","sideBar","room_id","app","isSideBarOpen","useState","useRef","trim","socket","emit","message","replace","url","conversation_id","from","to","type","style","zIndex","bottom","right","Picker","data","onEmojiSelect","emoji","input","current","selectionStart","selectionEnd","substring","handleEmojiClick","native","primary","main","PaperPlaneTilt","Conversation","menu","conversations","current_messages","useEffect","find","console","log","FetchCurrentMessages","messages","SetCurrentConversation","idx","Timeline","subtype","MediaMsg","DocMsg","LinkMsg","ReplyMsg","TextMsg","ChatComponent","messageListRef","scrollTop","scrollHeight","maxHeight","ref","flexGrow","overflowY","SimpleBarStyle","timeout","clickOnTrack","ChatFooter","MessageOption","setAnchorEl","handleClose","DotsThreeVertical","px","Message_options","incoming","py","alpha","default","_ref3","DownloadSimple","_ref4","dangerouslySetInnerHTML","__html","_ref5","reply","_ref6"],"sourceRoot":""}