{"version":3,"file":"static/js/574.f048b511.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","layouts/dashboard/BottomNav.js","components/UserElement.js","sections/Dashboard/Friends.js","pages/dashboard/Chats.js","components/Chat/Header.js","components/Chat/Footer.js","pages/dashboard/Conversation.js","../node_modules/phosphor-react/src/icons/ArrowLeft.tsx","sections/Dashboard/StarredMessages.js","sections/Dashboard/SharedMessages.js","pages/dashboard/GeneralApp.js","sections/Dashboard/Contact.js","sections/Dashboard/Conversation.js"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Badge, Stack, Avatar, Typography } from \"@mui/material\";\r\nimport { styled, useTheme, alpha } from \"@mui/material/styles\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SelectConversation } from \"../redux/slices/app\";\r\n\r\nconst truncateText = (string, n) => {\r\n  return string?.length > n ? `${string?.slice(0, n)}...` : string;\r\n};\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatElement = ({ img, name, msg, time, unread, online, id }) => {\r\n  const dispatch = useDispatch();\r\n  const {room_id} = useSelector((state) => state.app);\r\n  const selectedChatId = room_id?.toString();\r\n\r\n  let isSelected = +selectedChatId === id;\r\n\r\n  if (!selectedChatId) {\r\n    isSelected = false;\r\n  }\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledChatBox\r\n      onClick={() => {\r\n        dispatch(SelectConversation({room_id: id}));\r\n      }}\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: isSelected\r\n          ? theme.palette.mode === \"light\"\r\n            ? alpha(theme.palette.primary.main, 0.5)\r\n            : theme.palette.primary.main\r\n          : theme.palette.mode === \"light\"\r\n          ? \"#fff\"\r\n          : theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n            <Typography variant=\"caption\">{truncateText(msg, 20)}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack spacing={2} alignItems={\"center\"}>\r\n          <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\r\n            {time}\r\n          </Typography>\r\n          <Badge\r\n            className=\"unread-count\"\r\n            color=\"primary\"\r\n            badgeContent={unread}\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nexport default ChatElement;\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: 20,\r\n  backgroundColor: alpha(theme.palette.background.paper, 1),\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n}));\r\n\r\nexport default Search;\r\n","import { styled } from \"@mui/material/styles\";  \r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  export default SearchIconWrapper;\r\n  ","import { InputBase } from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  export default StyledInputBase;","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, IconButton, Stack } from \"@mui/material\";\r\nimport ProfileMenu from \"./ProfileMenu\";\r\nimport { Nav_Buttons } from \"../../data\";\r\n\r\nconst BottomNav = () => {\r\n  const theme = useTheme();\r\n\r\n  const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n  const handleChangeTab = (index) => {\r\n    setSelectedTab(index);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        width: \"100vw\",\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n      }}\r\n    >\r\n      <Stack\r\n        sx={{ width: \"100%\" }}\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n        spacing={2}\r\n        p={2}\r\n      >\r\n        {Nav_Buttons.map((el) => {\r\n          return el.index === selectedTab ? (\r\n            <Box sx={{ backgroundColor: theme.palette.primary.main, borderRadius: 1.5 }} p={1}>\r\n              <IconButton sx={{ width: \"max-content\", color: \"#ffffff\" }}>\r\n                {el.icon}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <IconButton\r\n              onClick={() => {\r\n                handleChangeTab(el.index);\r\n              }}\r\n              sx={{\r\n                width: \"max-content\",\r\n                color:\r\n                  theme.palette.mode === \"light\"\r\n                    ? \"#080707\"\r\n                    : theme.palette.text.primary,\r\n              }}\r\n            >\r\n              {el.icon}\r\n            </IconButton>\r\n          );\r\n        })}\r\n        <ProfileMenu />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BottomNav;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Badge,\r\n  Stack,\r\n  Avatar,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport { Chat } from \"phosphor-react\";\r\nimport { socket } from \"../socket\";\r\n\r\nconst user_id = window.localStorage.getItem(\"user_id\");\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserElement = ({ img, firstName, lastName, online, _id }) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              socket.emit(\"friend_request\", { to: _id, from: user_id }, () => {\r\n                alert(\"request sent\");\r\n              });\r\n            }}\r\n          >\r\n            Send Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nconst FriendRequestElement = ({\r\n  img,\r\n  firstName,\r\n  lastName,\r\n  incoming,\r\n  missed,\r\n  online,\r\n  id,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              //  emit \"accept_request\" event\r\n              socket.emit(\"accept_request\", { request_id: id });\r\n            }}\r\n          >\r\n            Accept Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\n// FriendElement\r\n\r\nconst FriendElement = ({\r\n  img,\r\n  firstName,\r\n  lastName,\r\n  incoming,\r\n  missed,\r\n  online,\r\n  _id,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <IconButton\r\n            onClick={() => {\r\n              // start a new conversation\r\n              socket.emit(\"start_conversation\", { to: _id, from: user_id });\r\n            }}\r\n          >\r\n            <Chat />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nexport { UserElement, FriendRequestElement, FriendElement };\r\n","import React, { useEffect } from \"react\";\r\nimport { Dialog, DialogContent, Slide, Stack, Tab, Tabs } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FetchFriendRequests,\r\n  FetchFriends,\r\n  FetchUsers,\r\n} from \"../../redux/slices/app\";\r\nimport { FriendElement, FriendRequestElement, UserElement } from \"../../components/UserElement\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst UsersList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { users } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchUsers());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {users.map((el, idx) => {\r\n        return <UserElement key={idx} {...el} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FriendsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { friends } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchFriends());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {friends.map((el, idx) => {\r\n        return <FriendElement key={idx} {...el} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RequestsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { friendRequests } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchFriendRequests());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {friendRequests.map((el, idx) => {\r\n        return <FriendRequestElement key={idx} {...el.sender} id={el._id} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Friends = ({ open, handleClose }) => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      sx={{ p: 4 }}\r\n    >\r\n      {/* <DialogTitle>{\"Friends\"}</DialogTitle> */}\r\n      <Stack p={2} sx={{ width: \"100%\" }}>\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Explore\" />\r\n          <Tab label=\"Friends\" />\r\n          <Tab label=\"Requests\" />\r\n        </Tabs>\r\n      </Stack>\r\n      <DialogContent>\r\n        <Stack sx={{ height: \"100%\" }}>\r\n          <Stack spacing={2.4}>\r\n            {(() => {\r\n              switch (value) {\r\n                case 0: // display all users in this list\r\n                  return <UsersList />;\r\n\r\n                case 1: // display friends in this list\r\n                  return <FriendsList />;\r\n\r\n                case 2: // display request in this list\r\n                  return <RequestsList />;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            })()}\r\n          </Stack>\r\n        </Stack>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n  ArchiveBox,\r\n  CircleDashed,\r\n  MagnifyingGlass,\r\n  Users,\r\n} from \"phosphor-react\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport BottomNav from \"../../layouts/dashboard/BottomNav\";\r\n// import { ChatList } from \"../../data\";\r\nimport ChatElement from \"../../components/ChatElement\";\r\nimport {\r\n  Search,\r\n  SearchIconWrapper,\r\n  StyledInputBase,\r\n} from \"../../components/Search\";\r\nimport Friends from \"../../sections/Dashboard/Friends\";\r\nimport { socket } from \"../../socket\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FetchDirectConversations } from \"../../redux/slices/conversation\";\r\n\r\nconst user_id = window.localStorage.getItem(\"user_id\");\r\n\r\nconst Chats = () => {\r\n  const theme = useTheme();\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const dispatch = useDispatch();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const { conversations } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"get_direct_conversations\", { user_id }, (data) => {\r\n      console.log(data); // this data is the list of conversations\r\n      // dispatch action\r\n\r\n      dispatch(FetchDirectConversations({ conversations: data }));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          height: \"100%\",\r\n          width: isDesktop ? 320 : \"100vw\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        {!isDesktop && (\r\n          // Bottom Nav\r\n          <BottomNav />\r\n        )}\r\n\r\n        <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\r\n          <Stack\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n            direction=\"row\"\r\n          >\r\n            <Typography variant=\"h5\">Chats</Typography>\r\n\r\n            <Stack direction={\"row\"} alignItems=\"center\" spacing={1}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleOpenDialog();\r\n                }}\r\n                sx={{ width: \"max-content\" }}\r\n              >\r\n                <Users />\r\n              </IconButton>\r\n              <IconButton sx={{ width: \"max-content\" }}>\r\n                <CircleDashed />\r\n              </IconButton>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Search>\r\n              <SearchIconWrapper>\r\n                <MagnifyingGlass color=\"#709CE6\" />\r\n              </SearchIconWrapper>\r\n              <StyledInputBase\r\n                placeholder=\"Search…\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </Search>\r\n          </Stack>\r\n          <Stack spacing={1}>\r\n            <Stack direction={\"row\"} spacing={1.5} alignItems=\"center\">\r\n              <ArchiveBox size={24} />\r\n              <Button variant=\"text\">Archive</Button>\r\n            </Stack>\r\n            <Divider />\r\n          </Stack>\r\n          <Stack\r\n            sx={{\r\n              flexGrow: 1,\r\n              height: \"100%\",\r\n              overflowY: \"scroll\",\r\n\r\n              \"::-webkit-scrollbar\": {\r\n                width: \"1.5px\",\r\n              },\r\n\r\n              \"::-webkit-scrollbar-track \": {\r\n                background:\r\n                  theme.palette.mode === \"light\"\r\n                    ? \"#F8FAFF\"\r\n                    : theme.palette.background.paper,\r\n              },\r\n\r\n              /* Handle */\r\n              \" ::-webkit-scrollbar-thumb \": {\r\n                background: \"#888\",\r\n              },\r\n\r\n              /* Handle on hover */\r\n              \"::-webkit-scrollbar-thumb:hover\": {\r\n                background: \"#555\",\r\n              },\r\n            }}\r\n          >\r\n            <Stack spacing={2.4}>\r\n              {/* <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                  Pinned\r\n                </Typography> */}\r\n              {/* Chat List */}\r\n              {/* {ChatList.filter((el) => el.pinned).map((el, idx) => {\r\n                  return <ChatElement {...el} />;\r\n                })} */}\r\n              <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                All Chats\r\n              </Typography>\r\n              {/* Chat List */}\r\n              {conversations\r\n                .filter((el) => !el.pinned)\r\n                .map((el, idx) => {\r\n                  return <ChatElement {...el} />;\r\n                })}\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n      {openDialog && (\r\n        <Friends open={openDialog} handleClose={handleCloseDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  Divider,\r\n  Fade,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  styled,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { ToggleSidebar } from \"../../redux/slices/app\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StartAudioCall } from \"../../redux/slices/audioCall\";\r\nimport { StartVideoCall } from \"../../redux/slices/videoCall\";\r\n// import { useSearchParams } from \"react-router-dom\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Conversation_Menu = [\r\n  {\r\n    title: \"Contact info\",\r\n  },\r\n  {\r\n    title: \"Mute notifications\",\r\n  },\r\n  {\r\n    title: \"Clear messages\",\r\n  },\r\n  {\r\n    title: \"Delete chat\",\r\n  },\r\n];\r\n\r\nconst ChatHeader = () => {\r\n  const dispatch = useDispatch();\r\n  // const [searchParams, setSearchParams] = useSearchParams();\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const [conversationMenuAnchorEl, setConversationMenuAnchorEl] =\r\n    React.useState(null);\r\n  const openConversationMenu = Boolean(conversationMenuAnchorEl);\r\n  const handleClickConversationMenu = (event) => {\r\n    setConversationMenuAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseConversationMenu = () => {\r\n    setConversationMenuAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        p={2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack\r\n          alignItems={\"center\"}\r\n          direction={\"row\"}\r\n          sx={{ width: \"100%\", height: \"100%\" }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack\r\n            onClick={() => {\r\n              dispatch(ToggleSidebar());\r\n            }}\r\n            spacing={2}\r\n            direction=\"row\"\r\n          >\r\n            <Box>\r\n              <StyledBadge\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar\r\n                  alt={current_conversation?.name}\r\n                  src={current_conversation?.img}\r\n                />\r\n              </StyledBadge>\r\n            </Box>\r\n            <Stack spacing={0.2}>\r\n              <Typography variant=\"subtitle2\">\r\n                {current_conversation?.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Online</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction={\"row\"}\r\n            alignItems=\"center\"\r\n            spacing={isMobile ? 1 : 3}\r\n          >\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(StartVideoCall(current_conversation.user_id));\r\n              }}\r\n            >\r\n              <VideoCamera />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(StartAudioCall(current_conversation.user_id));\r\n              }}\r\n            >\r\n              <Phone />\r\n            </IconButton>\r\n            {!isMobile && (\r\n              <IconButton>\r\n                <MagnifyingGlass />\r\n              </IconButton>\r\n            )}\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <IconButton\r\n              id=\"conversation-positioned-button\"\r\n              aria-controls={\r\n                openConversationMenu\r\n                  ? \"conversation-positioned-menu\"\r\n                  : undefined\r\n              }\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={openConversationMenu ? \"true\" : undefined}\r\n              onClick={handleClickConversationMenu}\r\n            >\r\n              <CaretDown />\r\n            </IconButton>\r\n            <Menu\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"fade-button\",\r\n              }}\r\n              TransitionComponent={Fade}\r\n              id=\"conversation-positioned-menu\"\r\n              aria-labelledby=\"conversation-positioned-button\"\r\n              anchorEl={conversationMenuAnchorEl}\r\n              open={openConversationMenu}\r\n              onClose={handleCloseConversationMenu}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n            >\r\n              <Box p={1}>\r\n                <Stack spacing={1}>\r\n                  {Conversation_Menu.map((el) => (\r\n                    <MenuItem onClick={handleCloseConversationMenu}>\r\n                      <Stack\r\n                        sx={{ minWidth: 100 }}\r\n                        direction=\"row\"\r\n                        alignItems={\"center\"}\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <span>{el.title}</span>\r\n                      </Stack>{\" \"}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Stack>\r\n              </Box>\r\n            </Menu>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n  Camera,\r\n  File,\r\n  Image,\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Smiley,\r\n  Sticker,\r\n  User,\r\n} from \"phosphor-react\";\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { socket } from \"../../socket\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px !important\",\r\n    paddingBottom: \"12px !important\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <Image size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n  },\r\n  {\r\n    color: \"#1b8cfe\",\r\n    icon: <Sticker size={24} />,\r\n    y: 172,\r\n    title: \"Stickers\",\r\n  },\r\n  {\r\n    color: \"#0172e4\",\r\n    icon: <Camera size={24} />,\r\n    y: 242,\r\n    title: \"Image\",\r\n  },\r\n  {\r\n    color: \"#0159b2\",\r\n    icon: <File size={24} />,\r\n    y: 312,\r\n    title: \"Document\",\r\n  },\r\n  {\r\n    color: \"#013f7f\",\r\n    icon: <User size={24} />,\r\n    y: 382,\r\n    title: \"Contact\",\r\n  },\r\n];\r\n\r\nconst ChatInput = ({\r\n  openPicker,\r\n  setOpenPicker,\r\n  setValue,\r\n  value,\r\n  inputRef,\r\n  handleSendMessage, // Add this prop\r\n}) => {\r\n  const [openActions, setOpenActions] = React.useState(false);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSendMessage(); // Call handleSendMessage when Enter is pressed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledInput\r\n      inputRef={inputRef}\r\n      value={value}\r\n      onChange={(event) => {\r\n        setValue(event.target.value);\r\n      }}\r\n      onKeyPress={handleKeyPress} // Listen for key press events\r\n      fullWidth\r\n      placeholder=\"Write a message...\"\r\n      variant=\"filled\"\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        startAdornment: (\r\n          <Stack sx={{ width: \"max-content\" }}>\r\n            <Stack\r\n              sx={{\r\n                position: \"relative\",\r\n                display: openActions ? \"inline-block\" : \"none\",\r\n              }}\r\n            >\r\n              {Actions.map((el) => (\r\n                <Tooltip placement=\"right\" title={el.title}>\r\n                  <Fab\r\n                    onClick={() => {\r\n                      setOpenActions(!openActions);\r\n                    }}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: -el.y,\r\n                      backgroundColor: el.color,\r\n                    }}\r\n                    aria-label=\"add\"\r\n                  >\r\n                    {el.icon}\r\n                  </Fab>\r\n                </Tooltip>\r\n              ))}\r\n            </Stack>\r\n\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenActions(!openActions);\r\n                }}\r\n              >\r\n                <LinkSimple />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n        endAdornment: (\r\n          <Stack sx={{ position: \"relative\" }}>\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenPicker(!openPicker);\r\n                }}\r\n              >\r\n                <Smiley />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction linkify(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return text.replace(\r\n    urlRegex,\r\n    (url) => `<a href=\"${url}\" target=\"_blank\">${url}</a>`\r\n  );\r\n}\r\n\r\nfunction containsUrl(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return urlRegex.test(text);\r\n}\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const user_id = window.localStorage.getItem(\"user_id\");\r\n\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n\r\n  const { sideBar, room_id } = useSelector((state) => state.app);\r\n  const isSideBarOpen = sideBar && sideBar.open;\r\n\r\n  const [openPicker, setOpenPicker] = React.useState(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  function handleEmojiClick(emoji) {\r\n    const input = inputRef.current;\r\n\r\n    if (input) {\r\n      const selectionStart = input.selectionStart;\r\n      const selectionEnd = input.selectionEnd;\r\n\r\n      setValue(\r\n        value.substring(0, selectionStart) +\r\n          emoji +\r\n          value.substring(selectionEnd)\r\n      );\r\n\r\n      // Move the cursor to the end of the inserted emoji\r\n      input.selectionStart = input.selectionEnd = selectionStart + 1;\r\n    }\r\n  }\r\n\r\n  const handleSendMessage = () => {\r\n    if (value.trim() !== \"\") {\r\n      socket.emit(\"text_message\", {\r\n        message: linkify(value),\r\n        conversation_id: room_id,\r\n        from: user_id,\r\n        to: current_conversation.user_id,\r\n        type: containsUrl(value) ? \"Link\" : \"Text\",\r\n      });\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        backgroundColor: \"transparent !important\",\r\n      }}\r\n    >\r\n      <Box\r\n        p={isMobile ? 1 : 2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={isMobile ? 1 : 3}>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Box\r\n              style={{\r\n                zIndex: 10,\r\n                position: \"fixed\",\r\n                display: openPicker ? \"inline\" : \"none\",\r\n                bottom: 81,\r\n                right: isMobile ? 20 : isSideBarOpen ? 420 : 100,\r\n              }}\r\n            >\r\n              <Picker\r\n                theme={theme.palette.mode}\r\n                data={data}\r\n                onEmojiSelect={(emoji) => {\r\n                  handleEmojiClick(emoji.native);\r\n                }}\r\n              />\r\n            </Box>\r\n            {/* Chat Input */}\r\n            <ChatInput\r\n              inputRef={inputRef}\r\n              value={value}\r\n              setValue={setValue}\r\n              openPicker={openPicker}\r\n              setOpenPicker={setOpenPicker}\r\n              handleSendMessage={handleSendMessage} // Pass handleSendMessage to ChatInput\r\n            />\r\n          </Stack>\r\n          <Box\r\n            sx={{\r\n              height: 48,\r\n              width: 48,\r\n              backgroundColor: theme.palette.primary.main,\r\n              borderRadius: 1.5,\r\n            }}\r\n          >\r\n            <Stack\r\n              sx={{ height: \"100%\" }}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"center\"\r\n            >\r\n              <IconButton onClick={handleSendMessage}>\r\n                {\" \"}\r\n                {/* Use handleSendMessage directly */}\r\n                <PaperPlaneTilt color=\"#ffffff\" />\r\n              </IconButton>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Stack, Box } from \"@mui/material\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\n\r\nimport { ChatHeader, ChatFooter } from \"../../components/Chat\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n// import { Chat_History } from \"../../data\";\r\nimport {\r\n  DocMsg,\r\n  LinkMsg,\r\n  MediaMsg,\r\n  ReplyMsg,\r\n  TextMsg,\r\n  Timeline,\r\n} from \"../../sections/Dashboard/Conversation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FetchCurrentMessages,\r\n  SetCurrentConversation,\r\n} from \"../../redux/slices/conversation\";\r\nimport { socket } from \"../../socket\";\r\n\r\nconst Conversation = ({ isMobile, menu }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { conversations, current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n  const { room_id } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    const current = conversations.find((el) => el?.id === room_id);\r\n\r\n    socket.emit(\"get_messages\", { conversation_id: current?.id }, (data) => {\r\n      // data => list of messages\r\n      console.log(data, \"List of messages\");\r\n      dispatch(FetchCurrentMessages({ messages: data }));\r\n    });\r\n\r\n    dispatch(SetCurrentConversation(current));\r\n  }, [conversations, dispatch, room_id]);\r\n  return (\r\n    <Box p={isMobile ? 1 : 3}>\r\n      <Stack spacing={3}>\r\n        {current_messages &&\r\n          current_messages.map((el, idx) => {\r\n            switch (el.type) {\r\n              case \"divider\":\r\n                return (\r\n                  // Timeline\r\n                  <Timeline el={el} />\r\n                );\r\n\r\n              case \"msg\":\r\n                switch (el.subtype) {\r\n                  case \"img\":\r\n                    return (\r\n                      // Media Message\r\n                      <MediaMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  case \"doc\":\r\n                    return (\r\n                      // Doc Message\r\n                      <DocMsg el={el} menu={menu} />\r\n                    );\r\n                  case \"Link\":\r\n                    return (\r\n                      //  Link Message\r\n                      <LinkMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  case \"reply\":\r\n                    return (\r\n                      //  ReplyMessage\r\n                      <ReplyMsg el={el} menu={menu} />\r\n                    );\r\n\r\n                  default:\r\n                    return (\r\n                      // Text Message\r\n                      <TextMsg el={el} menu={menu} />\r\n                    );\r\n                }\r\n\r\n              default:\r\n                return <></>;\r\n            }\r\n          })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ChatComponent = () => {\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const messageListRef = useRef(null);\r\n\r\n  const { current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the message list when new messages are added\r\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n  }, [current_messages]);\r\n\r\n  return (\r\n    <Stack height=\"100%\" maxHeight=\"100vh\" width={isMobile ? \"100vw\" : \"auto\"}>\r\n      {/*  */}\r\n      <ChatHeader />\r\n      <Box\r\n        ref={messageListRef}\r\n        width={\"100%\"}\r\n        sx={{\r\n          position: \"relative\",\r\n          flexGrow: 1,\r\n          height: \"100%\",\r\n          overflowY: \"scroll\",\r\n\r\n          \"::-webkit-scrollbar\": {\r\n            width: \"1.5px\",\r\n          },\r\n\r\n          \"::-webkit-scrollbar-track \": {\r\n            background:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background.paper,\r\n          },\r\n\r\n          /* Handle */\r\n          \" ::-webkit-scrollbar-thumb \": {\r\n            background: \"#888\",\r\n          },\r\n\r\n          /* Handle on hover */\r\n          \"::-webkit-scrollbar-thumb:hover\": {\r\n            background: \"#555\",\r\n          },\r\n\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F0F4FA\"\r\n              : theme.palette.background,\r\n\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n          <Conversation menu={true} isMobile={isMobile} />\r\n        </SimpleBarStyle>\r\n      </Box>\r\n\r\n      {/*  */}\r\n      <ChatFooter />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n\r\nexport { Conversation };\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"128\"\n      x2=\"40\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"112 56 40 128 112 200\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"128\"\n      x2=\"40\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"112 56 40 128 112 200\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,128a8,8,0,0,1-8,8H120v64a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3l-72-72a8.1,8.1,0,0,1,0-11.4l72-72a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,120,56v64h96A8,8,0,0,1,224,128Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"128\"\n      x2=\"40\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"112 56 40 128 112 200\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"128\"\n      x2=\"40\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"112 56 40 128 112 200\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"128\"\n      x2=\"40\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"112 56 40 128 112 200\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst ArrowLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nArrowLeft.displayName = \"ArrowLeft\";\n\nexport default ArrowLeft;\n","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { ArrowLeft } from \"phosphor-react\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateSidebarType } from \"../../redux/slices/app\";\r\nimport { Conversation } from \"../../pages/dashboard/Conversation\";\r\n\r\nconst StarredMessages = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useTheme();\r\n\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  return (\r\n    <Box sx={{ width: !isDesktop ? \"100vw\" : 320, maxHeight: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}\r\n        >\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems={\"center\"}\r\n            spacing={3}\r\n          >\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"CONTACT\"));\r\n              }}\r\n            >\r\n              <ArrowLeft />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">Starred Messages</Typography>\r\n          </Stack>\r\n        </Box>\r\n        <Stack\r\n          sx={{\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n            \"::-webkit-scrollbar\": {\r\n              width: \"1.5px\",\r\n            },\r\n\r\n            \"::-webkit-scrollbar-track \": {\r\n              background:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#F8FAFF\"\r\n                  : theme.palette.background.paper,\r\n            },\r\n\r\n            /* Handle */\r\n            \" ::-webkit-scrollbar-thumb \": {\r\n              background: \"#888\",\r\n            },\r\n\r\n            /* Handle on hover */\r\n            \"::-webkit-scrollbar-thumb:hover\": {\r\n              background: \"#555\",\r\n            },\r\n\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F0F4FA\"\r\n                : theme.palette.background,\r\n\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n          }}\r\n          spacing={3}\r\n        >\r\n          <Conversation />\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StarredMessages;\r\n","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { ArrowLeft } from \"phosphor-react\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateSidebarType } from \"../../redux/slices/app\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { DocMsg, LinkMsg } from \"./Conversation\";\r\nimport { Shared_docs, Shared_links } from \"../../data\";\r\n\r\nconst Media = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useTheme();\r\n\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: !isDesktop ? \"100vw\" : 320, maxHeight: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}\r\n        >\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems={\"center\"}\r\n            spacing={3}\r\n          >\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"CONTACT\"));\r\n              }}\r\n            >\r\n              <ArrowLeft />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">Shared</Typography>\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Media\" />\r\n          <Tab label=\"Links\" />\r\n          <Tab label=\"Docs\" />\r\n        </Tabs>\r\n        <Stack\r\n          sx={{\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n            \"::-webkit-scrollbar\": {\r\n              width: \"1.5px\",\r\n            },\r\n\r\n            \"::-webkit-scrollbar-track \": {\r\n              background:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#F8FAFF\"\r\n                  : theme.palette.background.paper,\r\n            },\r\n\r\n            /* Handle */\r\n            \" ::-webkit-scrollbar-thumb \": {\r\n              background: \"#888\",\r\n            },\r\n\r\n            /* Handle on hover */\r\n            \"::-webkit-scrollbar-thumb:hover\": {\r\n              background: \"#555\",\r\n            },\r\n\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F0F4FA\"\r\n                : theme.palette.background,\r\n\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n          }}\r\n          spacing={3}\r\n          padding={value === 1 ? 1 : 3}\r\n        >\r\n          {/* <Conversation starred={true} /> */}\r\n          {(() => {\r\n            switch (value) {\r\n              case 0:\r\n                return (\r\n                  <Grid container spacing={2}>\r\n                    {[0, 1, 2, 3, 4, 5, 6].map((el) => (\r\n                      <Grid item xs={4}>\r\n                        <img\r\n                          src={faker.image.city()}\r\n                          alt={faker.internet.userName()}\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                );\r\n              case 1:\r\n                return Shared_links.map((el) => <LinkMsg el={el} />);\r\n\r\n              case 2:\r\n                return Shared_docs.map((el) => <DocMsg el={el} />);\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })()}\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\n\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport ChatComponent from \"./Conversation\";\r\nimport Chats from \"./Chats\";\r\nimport Contact from \"../../sections/Dashboard/Contact\";\r\nimport Logo from \"../../assets/Images/Talk ‘A’ Tive.png\";\r\nimport Logo1 from \"../../assets/Images/Talk ‘A’ Tive (2).png\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StarredMessages from \"../../sections/Dashboard/StarredMessages\";\r\nimport Media from \"../../sections/Dashboard/SharedMessages\";\r\n\r\nconst GeneralApp = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const theme = useTheme();\r\n\r\n  const { sideBar, room_id, chat_type } = useSelector((state) => state.app);\r\n  const isSideBarOpen = sideBar && sideBar.open;\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n        <Chats />\r\n        <Box\r\n          sx={{\r\n            height: \"100%\",\r\n            width: isSideBarOpen\r\n              ? `calc(100vw - 740px )`\r\n              : \"calc(100vw - 420px )\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#FFF\"\r\n                : theme.palette.background.paper,\r\n            borderBottom: searchParams.get(\"type\") === \"individual-chat\",\r\n          }}\r\n        >\r\n          {chat_type === \"individual\" && room_id !== null ? (\r\n            <ChatComponent />\r\n          ) : (\r\n            <Stack\r\n              spacing={2}\r\n              sx={{ height: \"100%\", width: \"100%\" }}\r\n              alignItems=\"center\"\r\n              justifyContent={\"center\"}\r\n            >\r\n              <img\r\n                src={theme.palette.mode === \"light\" ? Logo : Logo1}\r\n                alt=\"chat app logo\"\r\n              />\r\n              <Typography variant=\"subtitle2\">\r\n                Select a Chat or start a{\" \"}\r\n                <Link\r\n                  style={{\r\n                    color: theme.palette.primary.main,\r\n                    textDecoration: \"none\",\r\n                  }}\r\n                  to=\"/\"\r\n                >\r\n                  New Conversation\r\n                </Link>\r\n              </Typography>\r\n            </Stack>\r\n          )}\r\n        </Box>\r\n        {isSideBarOpen &&\r\n          (() => {\r\n            switch (sideBar.type) {\r\n              case \"CONTACT\":\r\n                return <Contact />;\r\n\r\n              case \"STARRED\":\r\n                return <StarredMessages />;\r\n\r\n              case \"SHARED\":\r\n                return <Media />;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })()}\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralApp;\r\n","import React, { useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n  Slide,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport {\r\n  Bell,\r\n  CaretRight,\r\n  Phone,\r\n  Prohibit,\r\n  Star,\r\n  Trash,\r\n  VideoCamera,\r\n  X,\r\n} from \"phosphor-react\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport AntSwitch from \"../../components/AntSwitch\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToggleSidebar, UpdateSidebarType } from \"../../redux/slices/app\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst BlockDialog = ({ open, handleClose }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>Block this contact</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          Are you sure you want to block this Contact?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleClose}>Yes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst DeleteChatDialog = ({ open, handleClose }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>Delete this chat</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          Are you sure you want to delete this chat?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleClose}>Yes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst Contact = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const [openBlock, setOpenBlock] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const handleCloseBlock = () => {\r\n    setOpenBlock(false);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: !isDesktop ? \"100vw\" : 320, maxHeight: \"100vh\" }}>\r\n      <Stack sx={{ height: \"100%\" }}>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            width: \"100%\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n          }}\r\n        >\r\n          <Stack\r\n            sx={{ height: \"100%\", p: 2 }}\r\n            direction=\"row\"\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n          >\r\n            <Typography variant=\"subtitle2\">Contact Info</Typography>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(ToggleSidebar());\r\n              }}\r\n            >\r\n              <X />\r\n            </IconButton>\r\n          </Stack>\r\n        </Box>\r\n        <Stack\r\n          sx={{\r\n            position: \"relative\",\r\n            flexGrow: 1,\r\n            height: \"100%\",\r\n            overflowY: \"scroll\",\r\n\r\n            \"::-webkit-scrollbar\": {\r\n              width: \"1.5px\",\r\n            },\r\n\r\n            \"::-webkit-scrollbar-track \": {\r\n              background:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#F8FAFF\"\r\n                  : theme.palette.background.paper,\r\n            },\r\n\r\n            /* Handle */\r\n            \" ::-webkit-scrollbar-thumb \": {\r\n              background: \"#888\",\r\n            },\r\n\r\n            /* Handle on hover */\r\n            \"::-webkit-scrollbar-thumb:hover\": {\r\n              background: \"#555\",\r\n            },\r\n\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F0F4FA\"\r\n                : theme.palette.background,\r\n\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n          }}\r\n          p={3}\r\n          spacing={3}\r\n        >\r\n          <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\r\n            <Avatar\r\n              src={current_conversation?.img}\r\n              alt={current_conversation?.name}\r\n              sx={{ height: 64, width: 64 }}\r\n            />\r\n            <Stack spacing={0.5}>\r\n              <Typography variant=\"article\" fontWeight={600}>\r\n                {current_conversation?.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" fontWeight={500}>\r\n                {\"+91 62543 28 739\"}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent={\"space-evenly\"}\r\n          >\r\n            <Stack alignItems={\"center\"} spacing={1}>\r\n              <IconButton>\r\n                <Phone />\r\n              </IconButton>\r\n\r\n              <Typography variant=\"overline\">Voice</Typography>\r\n            </Stack>\r\n            <Stack alignItems={\"center\"} spacing={1}>\r\n              <IconButton>\r\n                <VideoCamera />\r\n              </IconButton>\r\n              <Typography variant=\"overline\">Video</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack spacing={0.5}>\r\n            <Typography variant=\"article\" fontWeight={600}>\r\n              About\r\n            </Typography>\r\n            <Typography variant=\"body2\" fontWeight={500}>\r\n              {current_conversation?.about}\r\n            </Typography>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <Typography variant=\"subtitle2\">Media, Links & Docs</Typography>\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"SHARED\"));\r\n              }}\r\n              endIcon={<CaretRight />}\r\n            >\r\n              401\r\n            </Button>\r\n          </Stack>\r\n          <Stack direction={\"row\"} alignItems=\"center\" spacing={2}>\r\n            {[1, 2, 3].map((el) => (\r\n              <Box>\r\n                <img src={faker.image.city()} alt={faker.internet.userName()} />\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n              <Star size={21} />\r\n              <Typography variant=\"subtitle2\">Starred Messages</Typography>\r\n            </Stack>\r\n\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(UpdateSidebarType(\"STARRED\"));\r\n              }}\r\n            >\r\n              <CaretRight />\r\n            </IconButton>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n              <Bell size={21} />\r\n              <Typography variant=\"subtitle2\">Mute Notifications</Typography>\r\n            </Stack>\r\n\r\n            <AntSwitch />\r\n          </Stack>\r\n          <Divider />\r\n          <Typography variant=\"body2\">1 group in common</Typography>\r\n          <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n            <Avatar src={faker.image.imageUrl()} alt={faker.name.fullName()} />\r\n            <Stack direction=\"column\" spacing={0.5}>\r\n              <Typography variant=\"subtitle2\">Camel’s Gang</Typography>\r\n              <Typography variant=\"caption\">\r\n                Owl, Parrot, Rabbit , You\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n            <Button\r\n              onClick={() => {\r\n                setOpenBlock(true);\r\n              }}\r\n              fullWidth\r\n              startIcon={<Prohibit />}\r\n              variant=\"outlined\"\r\n            >\r\n              Block\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setOpenDelete(true);\r\n              }}\r\n              fullWidth\r\n              startIcon={<Trash />}\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n      {openBlock && (\r\n        <BlockDialog open={openBlock} handleClose={handleCloseBlock} />\r\n      )}\r\n      {openDelete && (\r\n        <DeleteChatDialog open={openDelete} handleClose={handleCloseDelete} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport {\r\n  Stack,\r\n  Box,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\r\nimport { Message_options } from \"../../data\";\r\n// import { Link } from \"react-router-dom\";\r\n// import truncateString from \"../../utils/truncate\";\r\n// import { LinkPreview } from \"@dhaiwat10/react-link-preview\";\r\n// import Embed from \"react-embed\";\r\n\r\nconst MessageOption = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <DotsThreeVertical\r\n        size={20}\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      />\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <Stack spacing={1} px={1}>\r\n          {Message_options.map((el) => (\r\n            <MenuItem onClick={handleClose}>{el.title}</MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          color={el.incoming ? theme.palette.text : \"#fff\"}\r\n        >\r\n          {el.message}\r\n        </Typography>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst MediaMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={1}>\r\n          <img\r\n            src={el.img}\r\n            alt={el.message}\r\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\r\n          />\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst DocMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"row\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Image size={48} />\r\n            <Typography variant=\"caption\">Abstract.png</Typography>\r\n            <IconButton>\r\n              <DownloadSimple />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst LinkMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"start\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Stack direction={\"column\"} spacing={2}>\r\n              {/* <Embed\r\n                width=\"300px\"\r\n                isDark\r\n                url={`https://youtu.be/xoWxBR34qLE`}\r\n              /> */}\r\n            </Stack>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            <div dangerouslySetInnerHTML={{ __html: el.message }}></div>\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst ReplyMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.paper, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: alpha(theme.palette.background.paper, 1),\r\n\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color={theme.palette.text}>\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.reply}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst Timeline = ({ el }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" alignItems={\"center\"} justifyContent=\"space-between\">\r\n      <Divider width=\"46%\" />\r\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\r\n        {el.text}\r\n      </Typography>\r\n      <Divider width=\"46%\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport { Timeline, MediaMsg, LinkMsg, DocMsg, TextMsg, ReplyMsg };\r\n"],"names":["StyledChatBox","styled","Box","_ref","theme","cursor","StyledBadge","Badge","_ref2","backgroundColor","color","boxShadow","concat","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","_ref3","img","name","msg","time","unread","online","id","dispatch","useDispatch","room_id","useSelector","state","app","selectedChatId","toString","isSelected","useTheme","_jsx","onClick","SelectConversation","sx","mode","alpha","primary","main","p","children","_jsxs","Stack","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","Typography","string","n","length","slice","fontWeight","className","badgeContent","truncateText","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","BottomNav","selectedTab","setSelectedTab","React","zIndex","bottom","Nav_Buttons","map","el","index","IconButton","icon","text","ProfileMenu","user_id","window","localStorage","getItem","UserElement","firstName","lastName","_id","Button","socket","emit","to","from","alert","FriendRequestElement","_ref4","incoming","missed","request_id","FriendElement","_ref5","Chat","Transition","props","ref","Slide","UsersList","users","useEffect","FetchUsers","_Fragment","idx","FriendsList","friends","FetchFriends","RequestsList","friendRequests","FetchFriendRequests","sender","open","handleClose","value","setValue","Dialog","fullWidth","maxWidth","TransitionComponent","keepMounted","onClose","Tabs","onChange","handleChange","event","newValue","centered","Tab","label","DialogContent","Chats","isDesktop","useResponsive","openDialog","setOpenDialog","useState","conversations","conversation","direct_chat","data","console","log","FetchDirectConversations","maxHeight","Users","CircleDashed","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","inputProps","ArchiveBox","size","Divider","flexGrow","overflowY","filter","pinned","ChatElement","Friends","handleCloseDialog","Conversation_Menu","title","ChatHeader","isMobile","current_conversation","conversationMenuAnchorEl","setConversationMenuAnchorEl","openConversationMenu","Boolean","handleCloseConversationMenu","ToggleSidebar","StartVideoCall","VideoCamera","StartAudioCall","Phone","orientation","flexItem","undefined","currentTarget","CaretDown","Menu","MenuListProps","Fade","anchorEl","transformOrigin","MenuItem","minWidth","StyledInput","TextField","paddingTop","paddingBottom","Actions","Image","y","Sticker","Camera","File","User","ChatInput","openPicker","setOpenPicker","inputRef","handleSendMessage","openActions","setOpenActions","target","onKeyPress","key","InputProps","disableUnderline","startAdornment","Tooltip","placement","Fab","InputAdornment","LinkSimple","endAdornment","Smiley","containsUrl","test","Footer","sideBar","isSideBarOpen","useRef","trim","message","replace","url","conversation_id","type","style","right","Picker","onEmojiSelect","emoji","input","current","selectionStart","selectionEnd","substring","handleEmojiClick","native","PaperPlaneTilt","Conversation","menu","current_messages","find","FetchCurrentMessages","messages","SetCurrentConversation","Timeline","subtype","MediaMsg","DocMsg","LinkMsg","ReplyMsg","TextMsg","ChatComponent","messageListRef","scrollTop","scrollHeight","SimpleBarStyle","timeout","clickOnTrack","ChatFooter","pathsByWeight","Map","set","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","d","renderPath","weight","renderPathForWeight","ArrowLeft","forwardRef","IconBase","displayName","StarredMessages","UpdateSidebarType","Media","Grid","container","item","xs","faker","image","city","internet","userName","Shared_links","Shared_docs","GeneralApp","searchParams","useSearchParams","chat_type","borderBottom","get","Logo","Logo1","Link","textDecoration","Contact","BlockDialog","DialogTitle","DialogContentText","DialogActions","DeleteChatDialog","openBlock","setOpenBlock","openDelete","setOpenDelete","X","about","endIcon","CaretRight","Star","Bell","AntSwitch","imageUrl","fullName","startIcon","Prohibit","Trash","handleCloseBlock","handleCloseDelete","MessageOption","setAnchorEl","DotsThreeVertical","px","Message_options","py","default","DownloadSimple","dangerouslySetInnerHTML","__html","reply","_ref6"],"sourceRoot":""}